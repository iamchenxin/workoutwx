{"version":3,"sources":["ts/xml.js"],"names":["str","buf","Buffer","from","buf2","alloc","a","console","log","ts2","xml2js","require","xmlStr","xmlStr2","rawBody","ts","parseString","err","result","catch","e"],"mappings":";;;+BAsCA,WAAmBA,GAAnB,EAAwB;AACtB,UAAMC,MAAMC,OAAOC,IAAP,CAAYH,GAAZ,EAAiB,MAAjB,CAAZ;AACA,UAAMI,OAAOF,OAAOG,KAAP,CAAa,CAAb,CAAb;AACA,UAAMC,IAAI,MAAM,wBAAYL,GAAZ,CAAhB;AACAM,YAAQC,GAAR,CAAY,oBAAQF,CAAR,CAAZ;AACD,G;;kBALcG,G;;;;;AApCf;;AACA;;;;AAFA,MAAMC,SAASC,QAAQ,QAAR,CAAf;;;AAIA,MAAMC,SAAU;;;;;;CAAhB;;AAQA,MAAMC,UAAW,2CACjB,QADiB,GAEd,mBAFc,GAGV,2DAHU,GAId,UAJc,GAKd,kCALc,GAMjB,SANA;;AAQA,MAAMC,UAAU;;;;;;;;;aAAhB;;AAWA,SAASC,EAAT,CAAYf,GAAZ,EAAiB;AACfU,SAAOM,WAAP,CAAmBhB,GAAnB,EAAwB,CAACiB,GAAD,EAAMC,MAAN,KAAiB;AACvCX,YAAQC,GAAR,CAAY,oBAAQU,MAAR,CAAZ;AACD,GAFD;AAGD;;AAQDT,IAAIK,OAAJ,EAAaK,KAAb,CAAmBC,KAAK;AACtBb,UAAQC,GAAR,CAAYY,CAAZ;AACD,CAFD;AAGAb,QAAQC,GAAR,CAAY,+BAAZ","file":"xml.js","sourcesContent":["// @flow\nconst xml2js = require('xml2js');\nimport { pFormat } from '../utils/tools.js';\nimport {parseWxBody} from '../wxlib/wxxml.js';\n\nconst xmlStr = `\n<item id=\"123\" type=\"common\">\n  <title>Item Title</title>\n  <description>Description of this item.</description>\n  (text)\n</item>\n`;\n\nconst xmlStr2 =  '<?xml version=\"1.0\" encoding=\"UTF-8\"?>' +\n'<root>' +\n   '<child foo=\"bar\">' +\n       '<grandchild baz=\"fizbuzz\">grandchild content</grandchild>' +\n   '</child>' +\n   '<sibling>with content!</sibling>' +\n'</root>';\n\nconst rawBody = \"<xml><ToUserName><![CDATA[nvshen]]></ToUserName>\\\n      <FromUserName><![CDATA[diaosi]]></FromUserName>\\\n      <CreateTime>1362161914</CreateTime>\\\n      <MsgType><![CDATA[location]]></MsgType>\\\n      <Location_X>30.283878</Location_X>\\\n      <Location_Y>120.063370</Location_Y>\\\n      <Scale>15</Scale>\\\n      <Label><![CDATA[]]></Label>\\\n      <MsgId>5850440872586764820</MsgId>\\\n      </xml>\";\n\nfunction ts(str) {\n  xml2js.parseString(str, (err, result) => {\n    console.log(pFormat(result));\n  })\n}\n\nasync function ts2(str) {\n  const buf = Buffer.from(str, 'utf8');\n  const buf2 = Buffer.alloc(0);\n  const a = await parseWxBody(buf);\n  console.log(pFormat(a));\n}\nts2(rawBody).catch(e => {\n  console.log(e);\n});\nconsole.log('-----------------------------');\n"],"sourceRoot":"/home/iamchenxin/project/workout/wxts2/src"}