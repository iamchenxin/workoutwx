{"version":3,"sources":["app/wxverify.js"],"names":["ctx","next","wc","token","encodingAESKey","corpID","echostr","VerifyEchostr","query","body","e","fs","writeFile","wxverify","require","config","wechat"],"mappings":";;;;;;;;+BASA,WAAwBA,GAAxB,EAAsCC,IAAtC,EAA2E;AACzE,QAAI;AACF,YAAMC,KAAK,8BAAkBC,KAAlB,EAAyBC,cAAzB,EAAyCC,MAAzC,CAAX;AACA,YAAMC,UAAUJ,GAAGK,aAAH,CAAiBP,IAAIQ,KAArB,CAAhB;AACAR,UAAIS,IAAJ,GAAWH,OAAX;AACD,KAJD,CAIE,OAAQI,CAAR,EAAY;AACZC,SAAGC,SAAH,CAAa,qBAAS,IAAT,CAAb,EAA6B,mBAAOF,CAAP,CAA7B;AACD;AACF,G;;kBARcG,Q;;;;;AANf;;AAIA;;;;AANA;AACA,MAAMF,KAAKG,QAAQ,gBAAR,EAA0BH,EAArC;;AAGA,MAAMI,SAASD,QAAQ,sBAAR,CAAf;AACA,MAAM,EAAEX,KAAF,EAASC,cAAT,EAAyBC,MAAzB,KAAmCU,OAAOC,MAAhD;QAcEH,Q,GAAAA,Q","file":"wxverify.js","sourcesContent":["// @flow\n//const util = require('util');\nconst fs = require('../utils/fs.js').fs;\nimport { toTmpDir, format } from '../utils/tools.js';\nimport type { Context } from 'koa';\nconst config = require('../../priv/config.js');\nconst { token, encodingAESKey, corpID} = config.wechat;\nimport { WXBizMsgCrypt } from '../wxlib/wxmsgcrypt.js';\n\nasync function wxverify(ctx: Context, next: Promise<mixed>): Promise<void> {\n  try {\n    const wc = new WXBizMsgCrypt(token, encodingAESKey, corpID);\n    const echostr = wc.VerifyEchostr(ctx.query);\n    ctx.body = echostr;\n  } catch ( e ) {\n    fs.writeFile(toTmpDir('vy'), format(e));\n  }\n}\n\nexport {\n  wxverify\n}\n"],"sourceRoot":"/home/iamchenxin/project/workout/wxts2/src"}